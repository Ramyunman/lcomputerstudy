<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy.example.mapper.BoardMapper">
	
	<!-- 게시글 등록 -->
	<insert id="createBoard" parameterType="Board">		
		INSERT INTO lc_board (
			b_title,
			b_content,
			u_idx,
			b_group,
			b_order,
			b_depth
		) VALUES (
			#{bTitle},
			#{bContent},
			#{user.uIdx},
			#{bGroup},
			1,
			0
		)
		<selectKey keyProperty="bGroup" resultType="int" order="BEFORE">
   			SELECT 		MAX(b_idx) +1 
   			FROM 		lc_board
		</selectKey>
	</insert>
	
	<update id="updateBGroup" parameterType="Board">
		UPDATE		lc_board
		SET			b_group = #{bGroup}
		WHERE		b_idx = LAST_INSERT_ID()
	</update>
		
	<!-- 보드 리스트 불러오기 -->
	<select id="selectBoardList" parameterType="Pagination" resultType="Board">
		SELECT		b_idx			as	bIdx,
					b_title			as	bTitle,
					b_content		as	bContent,	
					b_group	 		as  bGroup,
					b_order			as  bOrder,
					b_depth			as  bDepth
						
		FROM 		lc_board
		ORDER BY	b_group	DESC, b_order ASC
		LIMIT		#{pageNum}, #{perPage}
	</select>
	
	<resultMap id="boardMap" type="Board">
    	<id property="bIdx" column="b_idx" />
    	<result property="bTitle" column="b_title" />
    	<result property="bContent" column="b_content" />
    	<result property="bViews" column="b_views" />
    	<result property="bDateTime" column="b_datetime" />
    	<result property="bGroup" column="b_group" />
    	<result property="bOrder" column="b_order" />
    	<result property="bDepth" column="b_depth" />
    	<association property="user" resultMap="userMap"/>
	</resultMap>

	<resultMap id="userMap" type="User">
    	<id property="uIdx" column="u_idx" />
    	<result property="username" column="u_id" />
    	<result property="password" column="u_password" />
    	<result property="uName" column="u_name" />
    	<result property="uTel" column="u_tel" />
    	<result property="uAge" column="u_age" />
	</resultMap>
	
	<!-- 보드 상세 정보 보기  -->	
	<select id="showBoardDetail" parameterType="int" resultMap="boardMap">
		SELECT 		ta.*,
					tb.u_name, u_id									
		FROM 		lc_board ta
		LEFT JOIN	lc_user	tb	ON	ta.u_idx = tb.u_idx
		WHERE 		b_idx = #{bIdx}
	</select>
			
	<!-- 보드 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE
		FROM		lc_board
		WHERE		b_idx = #{bIdx}
	</delete>
	

	<!-- 보드 수정전 보여주기 -->
	<select id="beforeBoardUpdate" parameterType="int" resultType="Board">
		SELECT 		b_title		as  bTitle,
					b_content	as 	bContent,
					b_idx		as  bIdx,
					b_datetime  as  bDateTime
					
		FROM 		lc_board
		WHERE 		b_idx = #{bIdx}
	</select>
	
	<!-- 보드 수정 -->
	<update id="updateBoard" parameterType="Board">
		UPDATE		lc_board
		SET			b_title = #{bTitle},
					b_content = #{bContent},
					b_datetime = current_timestamp()
						
		WHERE 		b_idx = #{bIdx}
	</update>
	
	<!-- 보드수 카운트  -->
	<select id="countBoard" resultType="int">
		SELECT 		COUNT(*) 
		FROM 		lc_board
	</select>
	
	<!-- Reply -->
		<!-- 답글 등록 -->
	<insert id="insertBoardReply" parameterType="Board">
  	<![CDATA[
    	INSERT INTO	lc_board (
    		b_title, 
    		b_content,
    		b_views,
    		u_idx,
    		b_group,
    		b_order,
    		b_depth
    		
    	) VALUES (
    		#{bTitle},
    		#{bContent},
    		#{bViews},
    		#{user.uIdx},
    		#{bGroup},
    		#{bOrder} + 1,
    		#{bDepth} + 1
    	)
  	]]>
	</insert>

		<!-- 기존 답글의 순서를 증가시킴 -->
	<update id="updateBOrder" parameterType="Board">
  	<![CDATA[
    	UPDATE		lc_board
    	SET 		b_order = b_order + 1 
    	WHERE 		b_group = #{bGroup} 
    	AND 		b_order > #{bOrder}
  	]]>
	</update>
	<!-- Reply -->
	
	<!-- getBoardByBIdx -->
	<select id="getBoardByBIdx" parameterType="int" resultMap="boardMap">
		SELECT 		*
		FROM		lc_board
		WHERE		b_idx = #{bIdx}
	</select>
	
</mapper>
