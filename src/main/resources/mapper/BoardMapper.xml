<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy.example.mapper.BoardMapper">
	
	<!-- 게시글 등록 -->
	<insert id="createBoard" parameterType="Board">		
		INSERT INTO lc_board (
			b_title,
			b_content,
			u_idx,
			b_group,
			b_order,
			b_depth
		) VALUES (
			#{bTitle},
			#{bContent},
			#{user.uIdx},
			#{bGroup},
			1,
			0
		)
		<selectKey keyProperty="bIdx" resultType="Integer">
   			SELECT 		last_insert_id()
		</selectKey>
	</insert>
	
	<!-- bGroup을 bIdx를 이용해 업데이트 하는 메소드. -->
	<update id="updateBGroup" parameterType="Board">
	<![CDATA[
		UPDATE		lc_board
		SET			b_group = last_insert_id()
		WHERE		b_idx = last_insert_id()
	]]>
	</update>
	
	<resultMap id="boardMap" type="Board">
    	<id property="bIdx" column="b_idx" />
    	<result property="bTitle" column="b_title" />
    	<result property="bContent" column="b_content" />
    	<result property="bViews" column="b_views" />
    	<result property="bDateTime" column="b_datetime" />
    	<result property="bGroup" column="b_group" />
    	<result property="bOrder" column="b_order" />
    	<result property="bDepth" column="b_depth" />
    	<association property="user" resultMap="userMap"/>
	</resultMap>

	<resultMap id="userMap" type="User">
    	<id property="uIdx" column="u_idx" />
    	<result property="username" column="u_id" />
    	<result property="password" column="u_password" />
    	<result property="uName" column="u_name" />
    	<result property="uTel" column="u_tel" />
    	<result property="uAge" column="u_age" />
	</resultMap>	
		
	<!-- 보드 리스트 불러오기 -->
	<select id="selectBoardList" parameterType="Pagination" resultMap="boardMap">
		SELECT			b.*, u.u_name
		FROM 			lc_board b
		INNER JOIN		lc_user u ON b.u_idx = u.u_idx
		<where>
			<choose>
				<when test="search != null">
					<choose>
						<when test="search.getTcw() == '1'">
							b_title like CONCAT('%',#{search.searchbox},'%')
						</when>
						<when test="search.getTcw() == '2'">
							b_title like CONCAT('%',#{search.searchbox()},'%') 
							OR b_content like CONCAT('%',#{search.searchbox()},'%')
						</when>
						<when test="search.getTcw() == '3'">
							u_name like CONCAT('%',#{search.searchbox()},'%')
						</when>
						<otherwise>
						</otherwise>
					</choose>
				</when>
				<otherwise>
				1=1
				</otherwise>
			</choose>
		</where>
		ORDER BY	b_group	DESC, b_order ASC
		LIMIT		#{pageNum}, #{perPage}
	</select>

	<!-- 보드 상세 정보 보기  -->	
	<select id="showBoardDetail" parameterType="int" resultMap="boardMap">
		SELECT 		ta.*,
					tb.u_name, u_id									
		FROM 		lc_board ta
		LEFT JOIN	lc_user	tb	ON	ta.u_idx = tb.u_idx
		WHERE 		b_idx = #{bIdx}
	</select>
			
	<!-- 보드 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE
		FROM		lc_board
		WHERE		b_idx = #{bIdx}
	</delete>
	

	<!-- 보드 수정전 보여주기 -->
	<select id="beforeBoardUpdate" parameterType="int" resultType="Board">
		SELECT 		b_title		as  bTitle,
					b_content	as 	bContent,
					b_idx		as  bIdx,
					b_datetime  as  bDateTime
					
		FROM 		lc_board
		WHERE 		b_idx = #{bIdx}
	</select>
	
	<!-- 보드 수정 -->
	<update id="updateBoard" parameterType="Board">
		UPDATE		lc_board
		SET			b_title = #{bTitle},
					b_content = #{bContent},
					b_datetime = current_timestamp()		
		WHERE 		b_idx = #{bIdx}
	</update>
	
	<!-- 보드수 카운트  -->
	<select id="countBoard" parameterType="Pagination" resultType="Integer">
		SELECT        COUNT(*) AS count
		FROM          lc_board b
		LEFT JOIN     lc_user u ON b.u_idx = u.u_idx
		<if test="search != null">
			<where>
				<choose>
					<when test="search.getTcw() == '1'">
						AND b_title like CONCAT('%',#{search.searchbox},'%')
					</when>
					<when test="search.getTcw() == '2'">
						AND (b_title like CONCAT('%',#{search.searchbox},'%') 
						OR b_content like CONCAT('%',#{search.searchbox},'%'))
					</when>
					<when test="search.getTcw() == '3'">
						AND u_name like CONCAT('%',#{search.searchbox},'%')
					</when>
				</choose>
			</where>
		</if>
	</select>
	
<!-- Reply -->
		<!-- 답글 등록 -->
	<insert id="insertBoardReply" parameterType="Board">
  	<![CDATA[
    	INSERT INTO	lc_board (
    		b_title, 
    		b_content,
    		b_views,
    		u_idx,
    		b_group,
    		b_order,
    		b_depth
    		
    	) VALUES (
    		#{bTitle},
    		#{bContent},
    		#{bViews},
    		#{user.uIdx},
    		#{bGroup},
    		#{bOrder} + 1,
    		#{bDepth} + 1
    	)
  	]]>
	</insert>

		<!-- 기존 답글의 순서를 증가시킴 -->
	<update id="updateBOrder" parameterType="Board">
  	<![CDATA[
    	UPDATE		lc_board
    	SET 		b_order = b_order + 1 
    	WHERE 		b_group = #{bGroup} 
    	AND 		b_order > #{bOrder}
  	]]>
	</update>
<!-- Reply -->
	
	<!-- getBoardByBIdx -->
	<select id="getBoardByBIdx" parameterType="int" resultMap="boardMap">
		SELECT 		*
		FROM		lc_board
		WHERE		b_idx = #{bIdx}
	</select>
	
</mapper>
